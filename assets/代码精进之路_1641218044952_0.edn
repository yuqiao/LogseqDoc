{:highlights [{:id #uuid "61d30079-efd4-4132-a9ad-8f321b10335d", :page 42, :position {:bounding {:x1 99.828125, :y1 167.5625, :x2 525.6025390625, :y2 184.5625, :width 598.9999999999999, :height 775.1764705882351}, :rects ({:x1 99.828125, :y1 167.5625, :x2 525.6025390625, :y2 184.5625, :width 598.9999999999999, :height 775.1764705882351}), :page 42}, :content {:text "无论是对于人名，还是企业名、产品名，命名都有着巨大的力量。"}, :properties {:color "yellow"}} {:id #uuid "61d300c3-d0c4-48e2-8e27-9b8670ec68da", :page 43, :position {:bounding {:x1 70.46875, :y1 395.890625, :x2 528.472900390625, :y2 431.203125, :width 598.9999999999999, :height 775.1764705882351}, :rects ({:x1 143.875, :y1 395.890625, :x2 528.472900390625, :y2 416.890625, :width 598.9999999999999, :height 775.1764705882351} {:x1 243, :y1 399.328125, :x2 528.472900390625, :y2 413.328125, :width 598.9999999999999, :height 775.1764705882351} {:x1 70.46875, :y1 414.203125, :x2 320.0547180175781, :y2 431.203125, :width 598.9999999999999, :height 775.1764705882351}), :page 43}, :content {:text "Martin   Fowler也表示过，他最喜欢的一句谚语是：“在计算机科学中有两件难事：缓存失效和命名"}, :properties {:color "yellow"}} {:id #uuid "61e3ef95-ad2e-447f-8187-22a9475ff558", :page 45, :position {:bounding {:x1 120, :y1 930.5, :x2 895, :y2 988.25, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 170, :y1 930.5, :x2 895, :y2 959.5, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 959.25, :x2 245, :y2 988.25, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "辅助类是辅佐实体类一起完成业务逻辑的，其命名要能够通过后缀来体现功能"}, :properties {:color "yellow"}} {:id #uuid "61e3f34c-1634-4ce5-bcba-75591b4729bd", :page 49, :position {:bounding {:x1 120, :y1 936.75, :x2 895, :y2 994.5, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 345, :y1 936.75, :x2 895, :y2 965.75, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 965.5, :x2 395, :y2 994.5, :width 1019.9999999999999, :height 1319.9999999999998}), :page 49}, :content {:text "确保团队在内部的所有交流、模型、代码和文档中都要使用同一种编程语言"}, :properties {:color "yellow"}} {:id #uuid "61e3f3ff-ab09-4259-aa9c-218a7bba85e0", :page 51, :position {:bounding {:x1 120, :y1 373, :x2 895, :y2 430.75, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 145, :y1 373, :x2 895, :y2 402, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 401.75, :x2 370, :y2 430.75, :width 1019.9999999999999, :height 1319.9999999999998}), :page 51}, :content {:text "自明性，就是在不借助其他辅助手段的情况下，代码本身就能向读者清晰地传达自身的含义"}, :properties {:color "yellow"}} {:id #uuid "61e42bf1-98de-47ed-be19-e51cf971e988", :page 68, :position {:bounding {:x1 120, :y1 893, :x2 895, :y2 950.75, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 295, :y1 893, :x2 895, :y2 922, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 921.75, :x2 295, :y2 950.75, :width 1019.9999999999999, :height 1319.9999999999998}), :page 68}, :content {:text "将概念相关的代码放在一起：相关性越强，彼此之间的距离应该越短。"}, :properties {:color "yellow"}} {:id #uuid "61e42d04-7b57-49e5-b6a7-88459ad734d1", :page 69, :position {:bounding {:x1 345, :y1 1163, :x2 620, :y2 1192, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 345, :y1 1163, :x2 620, :y2 1192, :width 1019.9999999999999, :height 1319.9999999999998}), :page 69}, :content {:text "要特别注意日志输出级别"}, :properties {:color "yellow"}} {:id #uuid "61e430d4-6b82-431a-a723-de388e926631", :page 72, :position {:bounding {:x1 120, :y1 479.25, :x2 845, :y2 540.9375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 245, :y1 479.25, :x2 845, :y2 508.25, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 504.9375, :x2 170.00608825683594, :y2 540.9375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 510.9375, :x2 669.96875, :y2 539.9375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 72}, :content {:text "针对业务异常和系统异常要做统一的异常处理，类似于AOP，在应用处理请求的切面上进行异常处理收敛"}, :properties {:color "yellow"}} {:id #uuid "61e430fc-ddb8-4b48-a533-e7cdcc901d39", :page 72, :position {:bounding {:x1 120, :y1 906.1875, :x2 895, :y2 995.75, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 545, :y1 906.1875, :x2 632.4259033203125, :y2 942.1875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 170, :y1 909.25, :x2 882.421875, :y2 938.25, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 938, :x2 895, :y2 967, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 966.75, :x2 220, :y2 995.75, :width 1019.9999999999999, :height 1319.9999999999998}), :page 72}, :content {:text "千万不要在业务处理内部到处使用try/catch打印错误日志，这样会使功能代码和业务代码缠绕在一起，让代码显得很凌乱，并且影响代码的可读性"}, :properties {:color "yellow"}} {:id #uuid "61f75a88-26bd-44d3-826a-0ef99fc6fad2", :page 72, :position {:bounding {:x1 325.8940734863281, :y1 850.265625, :x2 618.8479614257812, :y2 872.265625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 325.8940734863281, :y1 850.265625, :x2 618.8479614257812, :y2 872.265625, :width 746.9999999999999, :height 966.7058823529411}), :page 72}, :content {:text "在系统搭建之初就制定好相应的规范"}, :properties {:color "yellow"}} {:id #uuid "61f75b95-a948-4070-88d1-6765758ac17b", :page 75, :position {:bounding {:x1 87.875, :y1 209.453125, :x2 645.2833251953125, :y2 255.515625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 124.5, :y1 209.453125, :x2 645.2833251953125, :y2 234.453125, :width 746.9999999999999, :height 966.7058823529411} {:x1 600.515625, :y1 212.15625, :x2 645.2833251953125, :y2 230.15625, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 230.515625, :x2 590.3465576171875, :y2 255.515625, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 232.515625, :x2 262.484375, :y2 250.515625, :width 746.9999999999999, :height 966.7058823529411}), :page 75}, :content {:text "做互联网产品，了解用户的行为和心智很重要。有一句话叫“业务数据化、数据业务化”，即业务要沉淀数据、数据要反哺业务。"}, :properties {:color "yellow"}} {:id #uuid "61f760ec-c37e-4fa8-9338-c993d2f510f1", :page 80, :position {:bounding {:x1 87.875, :y1 580.21875, :x2 651.3614501953125, :y2 647.328125, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 506.9306945800781, :y1 580.21875, :x2 651.3614501953125, :y2 605.21875, :width 746.9999999999999, :height 966.7058823529411} {:x1 561.859375, :y1 582.90625, :x2 651.3614501953125, :y2 600.90625, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 601.265625, :x2 645.2697143554688, :y2 626.265625, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 603.265625, :x2 645.2697143554688, :y2 621.265625, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 622.328125, :x2 551.6827392578125, :y2 647.328125, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 624.328125, :x2 498.453125, :y2 642.328125, :width 746.9999999999999, :height 966.7058823529411}), :page 80}, :content {:text "如果对“过错”不闻不问、熟视无睹、反应迟钝或纠正不力，就会纵容更多的人“去打烂更多的窗户”，极有可能演变成“千里之堤，溃于蚁穴”的恶果"}, :properties {:color "yellow"}} {:id #uuid "61f761d1-cbf7-4d5a-9d9b-7459a495f63b", :page 81, :position {:bounding {:x1 87.875, :y1 209.453125, :x2 655.4593505859375, :y2 252.515625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 124.5, :y1 209.453125, :x2 655.4593505859375, :y2 231.453125, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 230.515625, :x2 252.65765380859375, :y2 252.515625, :width 746.9999999999999, :height 966.7058823529411}), :page 81}, :content {:text "混乱会造成复杂，有序会减少复杂度。制定规范是为了从无序走向有序，减少认知成本"}, :properties {:color "yellow"}} {:id #uuid "61f8e1e3-4294-4f96-8606-810a9d1bd18c", :page 97, :position {:bounding {:x1 124.5, :y1 209.453125, :x2 622.1807250976562, :y2 234.453125, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 124.5, :y1 209.453125, :x2 622.1807250976562, :y2 234.453125, :width 746.9999999999999, :height 966.7058823529411} {:x1 270.96875, :y1 212.15625, :x2 603.9231567382812, :y2 230.15625, :width 746.9999999999999, :height 966.7058823529411}), :page 97}, :content {:text "抽象层次一致性（Single Level of Abstration Principle，SLAP）"}, :properties {:color "yellow"}} {:id #uuid "620115ae-cd97-41b9-8b8f-e0ed7c02794b", :page 106, :position {:bounding {:x1 124.5, :y1 307.9375, :x2 572.8920288085938, :y2 417.15625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 124.5, :y1 307.9375, :x2 567.8295288085938, :y2 332.9375, :width 746.9999999999999, :height 966.7058823529411} {:x1 352.21875, :y1 311.25, :x2 567.8295288085938, :y2 329.25, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 329, :x2 463.0931091308594, :y2 354, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 333, :x2 463.0931091308594, :y2 351, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 350.046875, :x2 553.5951538085938, :y2 375.046875, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 354.046875, :x2 553.5951538085938, :y2 372.046875, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 371.109375, :x2 561.6420288085938, :y2 396.109375, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 375.109375, :x2 561.6420288085938, :y2 393.109375, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 392.15625, :x2 572.8920288085938, :y2 417.15625, :width 746.9999999999999, :height 966.7058823529411} {:x1 124.5, :y1 396.15625, :x2 408.177734375, :y2 414.15625, :width 746.9999999999999, :height 966.7058823529411}), :page 106}, :content {:text "Single Responsibility Principle（SRP）：单一职责原则。Open Close Principle（OCP）：开闭原则。Liskov Substitution Principle（LSP）：里氏替换原则。Interface Segregation Principle（ISP）：接口隔离原则。Dependency Inversion Principle（DIP）：依赖倒置原则。"}, :properties {:color "yellow"}} {:id #uuid "620116b7-3e85-4b38-bd5b-44583da9fc15", :page 114, :position {:bounding {:x1 87.875, :y1 330.296875, :x2 654.4151611328125, :y2 373.359375, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 343.1556091308594, :y1 330.296875, :x2 654.4151611328125, :y2 352.296875, :width 746.9999999999999, :height 966.7058823529411} {:x1 87.875, :y1 351.359375, :x2 142.80775451660156, :y2 373.359375, :width 746.9999999999999, :height 966.7058823529411}), :page 114}, :content {:text "可扩展性是我们衡量软件质量的一个重要指标"}, :properties {:color "yellow"}} {:id #uuid "620116e2-6c25-4bda-b70d-99d260bc9cba", :page 115, :position {:bounding {:x1 279.0801696777344, :y1 351.640625, :x2 626.966796875, :y2 373.640625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 279.0801696777344, :y1 351.640625, :x2 626.966796875, :y2 373.640625, :width 746.9999999999999, :height 966.7058823529411}), :page 115}, :content {:text "子类应该可以替换任何基类能够出现的地方"}, :properties {:color "yellow"}} {:id #uuid "620116eb-1b74-47f9-98bc-014ec2031206", :page 115, :position {:bounding {:x1 87.875, :y1 372.40625, :x2 399.13458251953125, :y2 394.40625, :width 746.9999999999999, :height 966.7058823529411}, :rects ({:x1 87.875, :y1 372.40625, :x2 399.13458251953125, :y2 394.40625, :width 746.9999999999999, :height 966.7058823529411}), :page 115}, :content {:text "并且经过替换后，代码还能正常工作。"}, :properties {:color "yellow"}} {:id #uuid "6203cdbb-22dd-4170-a133-9fe2c7201a13", :page 136, :position {:bounding {:x1 70.46875, :y1 171.96875, :x2 510.91363525390625, :y2 205.84375, :width 598.9999999999999, :height 775.1764705882351}, :rects ({:x1 99.828125, :y1 171.96875, :x2 510.91363525390625, :y2 188.96875, :width 598.9999999999999, :height 775.1764705882351} {:x1 70.46875, :y1 188.84375, :x2 99.84651184082031, :y2 205.84375, :width 598.9999999999999, :height 775.1764705882351}), :page 136}, :content {:text "利用模式，我们可以让一个解决方案重复使用，而不是重复造轮子。"}, :properties {:color "yellow"}} {:id #uuid "6203ce9c-bc1b-4d0e-9229-c87f9c0c5633", :page 145, :position {:bounding {:x1 70.46875, :y1 167.5625, :x2 528.0505981445312, :y2 205.453125, :width 598.9999999999999, :height 775.1764705882351}, :rects ({:x1 99.828125, :y1 167.5625, :x2 528.0505981445312, :y2 188.5625, :width 598.9999999999999, :height 775.1764705882351} {:x1 187.90625, :y1 170.125, :x2 528.0505981445312, :y2 184.125, :width 598.9999999999999, :height 775.1764705882351} {:x1 70.46875, :y1 184.453125, :x2 490.4898986816406, :y2 205.453125, :width 598.9999999999999, :height 775.1764705882351} {:x1 70.46875, :y1 186.453125, :x2 431.7531433105469, :y2 200.453125, :width 598.9999999999999, :height 775.1764705882351}), :page 145}, :content {:text "拦截器模式（Interceptor    Pattern），是指提供一种通用的扩展机制，可以在业务操作前后提供一些切面的（Cross-Cutting）的操作"}, :properties {:color "yellow"}} {:id #uuid "62086301-9751-45c3-8521-db96a7e6150e", :page 151, :position {:bounding {:x1 70.46875, :y1 167.5625, :x2 523.93798828125, :y2 201.453125, :width 598.9999999999999, :height 775.1764705882351}, :rects ({:x1 99.828125, :y1 167.5625, :x2 523.93798828125, :y2 188.5625, :width 598.9999999999999, :height 775.1764705882351} {:x1 143.875, :y1 170.125, :x2 523.93798828125, :y2 184.125, :width 598.9999999999999, :height 775.1764705882351} {:x1 70.46875, :y1 184.453125, :x2 481.55426025390625, :y2 201.453125, :width 598.9999999999999, :height 775.1764705882351}), :page 151}, :content {:text "插件（plug-in）模式扩展方式和普通的对象扩展方式的不同之处在于，普通的扩展发生在软件内部，插件式扩展发生在软件外部。"}, :properties {:color "yellow"}}]}